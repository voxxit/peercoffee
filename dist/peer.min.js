/*! peerjs build: 0.3.10 */
!function(a,b){return"function"==typeof define&&define.amd?define([],function(){return a.DataConnection=b()}):"object"==typeof exports?module.exports=b():a.DataConnection=b()}(this,function(){var a;return a=function(b,c,d){return this instanceof a?(EventEmitter.call(this),this.options=util.extend({serialization:"binary",reliable:!1},d),this.open=!1,this.type="data",this.peer=b,this.provider=c,this.id=this.options.connectionId||a._idPrefix+util.randomToken(),this.label=this.options.label||this.id,this.metadata=this.options.metadata,this.serialization=this.options.serialization,this.reliable=this.options.reliable,this._buffer=[],this._buffering=!1,this.bufferSize=0,this._chunkedData={},this.options._payload&&(this._peerBrowser=this.options._payload.browser),void Negotiator.startConnection(this,this.options._payload||{originator:!0})):new a(b,c,d)},util.inherits(a,EventEmitter),a._idPrefix="dc_",a.prototype.initialize=function(a){this._dc=this.dataChannel=a,this._configureDataChannel()},a.prototype._configureDataChannel=function(){var a;a=this,util.supports.sctp&&(this._dc.binaryType="arraybuffer"),this._dc.onopen=function(){util.log("Data channel connection success"),a.open=!0,a.emit("open")},!util.supports.sctp&&this.reliable&&(this._reliable=new Reliable(this._dc,util.debug)),this._reliable?this._reliable.onmessage=function(b){a.emit("data",b)}:this._dc.onmessage=function(b){a._handleDataMessage(b)},this._dc.onclose=function(){util.log("DataChannel closed for:",a.peer),a.close()}},a.prototype._handleDataMessage=function(a){var b,c,d,e,f,g;if(g=this,d=a.data,e=d.constructor,"binary"===this.serialization||"binary-utf8"===this.serialization){if(e===Blob)return void util.blobToArrayBuffer(d,function(a){d=util.unpack(a),g.emit("data",d)});e===ArrayBuffer?d=util.unpack(d):e===String&&(b=util.binaryStringToArrayBuffer(d),d=util.unpack(b))}else"json"===this.serialization&&(d=JSON.parse(d));return d.__peerData?(f=d.__peerData,c=this._chunkedData[f]||{data:[],count:0,total:d.total},c.data[d.n]=d.data,c.count+=1,c.total===c.count&&(delete this._chunkedData[f],d=new Blob(c.data),this._handleDataMessage({data:d})),void(this._chunkedData[f]=c)):void this.emit("data",d)},a.prototype.close=function(){this.open&&(this.open=!1,Negotiator.cleanup(this),this.emit("close"))},a.prototype.send=function(a,b){var c,d,e;if(!this.open)return void this.emit("error",new Error("Connection is not open. You should listen for the `open` event before sending messages."));if(this._reliable)return void this._reliable.send(a);if(e=this,"json"===this.serialization)this._bufferedSend(JSON.stringify(a));else if("binary"===this.serialization||"binary-utf8"===this.serialization){if(c=util.pack(a),d=util.chunkedBrowsers[this._peerBrowser]||util.chunkedBrowsers[util.browser],d&&!b&&c.size>util.chunkedMTU)return void this._sendChunks(c);util.supports.sctp?util.supports.binaryBlob?this._bufferedSend(c):util.blobToArrayBuffer(c,function(a){e._bufferedSend(a)}):util.blobToBinaryString(c,function(a){e._bufferedSend(a)})}else this._bufferedSend(a)},a.prototype._bufferedSend=function(a){(this._buffering||!this._trySend(a))&&(this._buffer.push(a),this.bufferSize=this._buffer.length)},a.prototype._trySend=function(a){var b,c;try{this._dc.send(a)}catch(d){return b=d,this._buffering=!0,c=this,setTimeout(function(){c._buffering=!1,c._tryBuffer()},100),!1}return!0},a.prototype._tryBuffer=function(){var a;0!==this._buffer.length&&(a=this._buffer[0],this._trySend(a)&&(this._buffer.shift(),this.bufferSize=this._buffer.length,this._tryBuffer()))},a.prototype._sendChunks=function(a){var b,c,d;for(b=util.chunk(a),c=0,d=b.length;d>c;)a=b[c],this.send(a,!0),c+=1},a.prototype.handleMessage=function(a){var b;switch(b=a.payload,a.type){case"ANSWER":return this._peerBrowser=b.browser,Negotiator.handleSDP(a.type,this,b.sdp);case"CANDIDATE":return Negotiator.handleCandidate(this,b.candidate);default:return util.warn("Unrecognized message type:",a.type,"from peer:",this.peer)}},a}),function(a,b){return"function"==typeof define&&define.amd?define([],function(){return a.MediaConnection=b()}):"object"==typeof exports?module.exports=b():a.MediaConnection=b()}(this,function(){var a;return a=function(b,c,d){return this instanceof a?(EventEmitter.call(this),this.options=util.extend({},d),this.open=!1,this.type="media",this.peer=b,this.provider=c,this.metadata=this.options.metadata,this.localStream=this.options._stream,this.id=this.options.connectionId||a._idPrefix+util.randomToken(),void(this.localStream&&Negotiator.startConnection(this,{_stream:this.localStream,originator:!0}))):new a(b,c,d)},util.inherits(a,EventEmitter),a._idPrefix="mc_",a.prototype.addStream=function(a){util.log("Receiving stream",a),this.remoteStream=a,this.emit("stream",a)},a.prototype.handleMessage=function(a){var b;switch(b=a.payload,a.type){case"ANSWER":return Negotiator.handleSDP(a.type,this,b.sdp),this.open=!0;case"CANDIDATE":return Negotiator.handleCandidate(this,b.candidate);default:return util.warn("Unrecognized message type:",a.type,"from peer:",this.peer)}},a.prototype.answer=function(a){var b,c,d;if(this.localStream)return void util.warn("Local stream already exists on this MediaConnection. Are you answering a call twice?");for(this.options._payload._stream=a,this.localStream=a,Negotiator.startConnection(this,this.options._payload),d=this.provider._getMessages(this.id),b=0,c=d.length;c>b;)this.handleMessage(d[b]),b+=1;this.open=!0},a.prototype.close=function(){this.open&&(this.open=!1,Negotiator.cleanup(this),this.emit("close"))},a}),function(a,b){return"function"==typeof define&&define.amd?define([],function(){return a.Negotiator=b()}):"object"==typeof exports?module.exports=b():a.Negotiator=b()}(this,function(){var a;return a={pcs:{data:{},media:{}},queue:[]},a._idPrefix="pc_",a.startConnection=function(b,c){var d,e,f;return f=a._getPeerConnection(b,c),"media"===b.type&&c._stream&&f.addStream(c._stream),b.pc=b.peerConnection=f,c.originator?("data"===b.type&&(d={},util.supports.sctp||(d={reliable:c.reliable}),e=f.createDataChannel(b.label,d),b.initialize(e)),util.supports.onnegotiationneeded?void 0:a._makeOffer(b)):a.handleSDP("OFFER",b,c.sdp)},a._getPeerConnection=function(b,c){var d,e;return a.pcs[b.type]||util.error(""+b.type+" is not a valid connection type. Maybe you overrode the `type` property somewhere."),a.pcs[b.type][b.peer]||(a.pcs[b.type][b.peer]={}),e=a.pcs[b.type][b.peer],d=void 0,c.pc&&(d=a.pcs[b.type][b.peer][c.pc]),d&&"stable"===d.signalingState||(d=a._startPeerConnection(b)),d},a._startPeerConnection=function(b){var c,d,e;return util.log("Creating RTCPeerConnection."),c=a._idPrefix+util.randomToken(),d={},"data"!==b.type||util.supports.sctp?"media"===b.type&&(d={optional:[{DtlsSrtpKeyAgreement:!0}]}):d={optional:[{RtpDataChannels:!0}]},e=new RTCPeerConnection(b.provider.options.config,d),a.pcs[b.type][b.peer][c]=e,a._setupListeners(b,e,c),e},a._setupListeners=function(b,c){var d,e,f;e=b.peer,d=b.id,f=b.provider,util.log("Listening for ICE candidates."),c.onicecandidate=function(a){a.candidate&&(util.log("Received ICE candidates for:",b.peer),f.socket.send({type:"CANDIDATE",payload:{candidate:a.candidate,type:b.type,connectionId:b.id},dst:e}))},c.oniceconnectionstatechange=function(){switch(c.iceConnectionState){case"disconnected":case"failed":return util.log("iceConnectionState is disconnected, closing connections to "+e),b.close();case"completed":return c.onicecandidate=util.noop}},c.onicechange=c.oniceconnectionstatechange,util.log("Listening for `negotiationneeded`"),c.onnegotiationneeded=function(){util.log("`negotiationneeded` triggered"),"stable"===c.signalingState?a._makeOffer(b):util.log("onnegotiationneeded triggered when not stable. Is another connection being established?")},util.log("Listening for data channel"),c.ondatachannel=function(a){var c;util.log("Received data channel"),c=a.channel,b=f.getConnection(e,d),b.initialize(c)},util.log("Listening for remote stream"),c.onaddstream=function(a){var b;util.log("Received remote stream"),b=a.stream,f.getConnection(e,d).addStream(b)}},a.cleanup=function(a){var b;util.log("Cleaning up PeerConnection to "+a.peer),b=a.pc,!b||"closed"===b.readyState&&"closed"===b.signalingState||(b.close(),a.pc=null)},a._makeOffer=function(a){var b;return b=a.pc,b.createOffer(function(c){util.log("Created offer."),!util.supports.sctp&&"data"===a.type&&a.reliable&&(c.sdp=Reliable.higherBandwidthSDP(c.sdp)),b.setLocalDescription(c,function(){util.log("Set localDescription: offer","for:",a.peer),a.provider.socket.send({type:"OFFER",payload:{sdp:c,type:a.type,label:a.label,connectionId:a.id,reliable:a.reliable,serialization:a.serialization,metadata:a.metadata,browser:util.browser},dst:a.peer})},function(b){a.provider.emitError("webrtc",b),util.log("Failed to setLocalDescription, ",b)})},function(b){a.provider.emitError("webrtc",b),util.log("Failed to createOffer, ",b)},a.options.constraints)},a._makeAnswer=function(a){var b;return b=a.pc,b.createAnswer(function(c){util.log("Created answer."),!util.supports.sctp&&"data"===a.type&&a.reliable&&(c.sdp=Reliable.higherBandwidthSDP(c.sdp)),b.setLocalDescription(c,function(){util.log("Set localDescription: answer","for:",a.peer),a.provider.socket.send({type:"ANSWER",payload:{sdp:c,type:a.type,connectionId:a.id,browser:util.browser},dst:a.peer})},function(b){a.provider.emitError("webrtc",b),util.log("Failed to setLocalDescription, ",b)})},function(b){return a.provider.emitError("webrtc",b),util.log("Failed to create answer, ",b)})},a.handleSDP=function(b,c,d){var e;return d=new RTCSessionDescription(d),e=c.pc,util.log("Setting remote description",d),e.setRemoteDescription(d,function(){return util.log("Set remoteDescription:",b,"for:",c.peer),"OFFER"===b?a._makeAnswer(c):void 0},function(a){return c.provider.emitError("webrtc",a),util.log("Failed to setRemoteDescription, ",a)})},a.handleCandidate=function(a,b){var c,d;return c=b.candidate,d=b.sdpMLineIndex,a.pc.addIceCandidate(new RTCIceCandidate({sdpMLineIndex:d,candidate:c})),util.log("Added ICE candidate for:",a.peer)},a}),function(a,b){return"function"==typeof define&&define.amd?define([],function(){return a.Peer=b()}):"object"==typeof exports?module.exports=b():a.Peer=b()}(this,function(){var a;return a=function(b,c){return this instanceof a?(EventEmitter.call(this),b&&b.constructor===Object?(c=b,b=void 0):b&&(b=b.toString()),c=util.extend({debug:0,host:util.CLOUD_HOST,port:util.CLOUD_PORT,key:"peerjs",path:"/",token:util.randomToken(),config:util.defaultConfig},c),this.options=c,"/"===c.host&&(c.host=window.location.hostname),"/"!==c.path[0]&&(c.path="/"+c.path),"/"!==c.path[c.path.length-1]&&(c.path+="/"),void 0===c.secure&&c.host!==util.CLOUD_HOST&&(c.secure=util.isSecure()),c.logFunction&&util.setLogFunction(c.logFunction),util.setLogLevel(c.debug),util.supports.audioVideo||util.supports.data?util.validateId(b)?util.validateKey(c.key)?c.secure&&"0.peerjs.com"===c.host?void this._delayedAbort("ssl-unavailable","The cloud server currently does not support HTTPS. Please run your own PeerServer to use HTTPS."):(this.destroyed=!1,this.disconnected=!1,this.open=!1,this.connections={},this._lostMessages={},this._initializeServerConnection(),void(b?this._initialize(b):this._retrieveId())):void this._delayedAbort("invalid-key",'API KEY "'+c.key+'" is invalid'):void this._delayedAbort("invalid-id",'ID "'+b+'" is invalid'):void this._delayedAbort("browser-incompatible","The current browser does not support WebRTC")):new a(b,c)},util.inherits(a,EventEmitter),a.prototype._initializeServerConnection=function(){var a;a=this,this.socket=new Socket(this.options.secure,this.options.host,this.options.port,this.options.path,this.options.key),this.socket.on("message",function(b){a._handleMessage(b)}),this.socket.on("error",function(b){a._abort("socket-error",b)}),this.socket.on("disconnected",function(){a.disconnected||(a.emitError("network","Lost connection to server."),a.disconnect())}),this.socket.on("close",function(){a.disconnected||a._abort("socket-closed","Underlying socket is already closed.")})},a.prototype._retrieveId=function(){var a,b,c,d,e;d=this,a=new XMLHttpRequest,b=this.options.secure?"https://":"http://",e=b+this.options.host+":"+this.options.port+this.options.path+this.options.key+"/id",c="?ts="+(new Date).getTime()+Math.random(),e+=c,a.open("get",e,!0),a.onerror=function(a){var b;util.error("Error retrieving ID",a),b="","/"===d.options.path&&d.options.host!==util.CLOUD_HOST&&(b=" If you passed in a `path` to your self-hosted PeerServer, you'll also need to pass in that same path when creating a new Peer."),d._abort("server-error","Could not get an ID from the server."+b)},a.onreadystatechange=function(){return 4===a.readyState?200!==a.status?void a.onerror():void d._initialize(a.responseText):void 0},a.send(null)},a.prototype._initialize=function(a){this.id=a,this.socket.start(this.id,this.options.token)},a.prototype._handleMessage=function(a){var b,c,d,e,f,g,h,i,j,k;switch(j=a.type,h=a.payload,i=a.src,j){case"OPEN":return this.emit("open",this.id),this.open=!0;case"ERROR":return this._abort("server-error",h.msg);case"ID-TAKEN":return this._abort("unavailable-id","ID `"+this.id+"` is taken");case"INVALID-KEY":return this._abort("invalid-key",'API KEY "'+this.options.key+'" is invalid');case"LEAVE":return util.log("Received leave message from",i),this._cleanupPeer(i);case"EXPIRE":return this.emitError("peer-unavailable","Could not connect to peer "+i);case"OFFER":if(c=h.connectionId,b=this.getConnection(i,c))return util.warn("Offer received for existing Connection ID:",c);if("media"===h.type)b=new MediaConnection(i,this,{connectionId:c,_payload:h,metadata:h.metadata}),this._addConnection(i,b),this.emit("call",b);else{if("data"!==h.type)return void util.warn("Received malformed connection type:",h.type);b=new DataConnection(i,this,{connectionId:c,_payload:h,metadata:h.metadata,label:h.label,serialization:h.serialization,reliable:h.reliable}),this._addConnection(i,b),this.emit("connection",b)}for(g=this._getMessages(c),d=0,f=g.length,k=[];f>d;)b.handleMessage(g[d]),k.push(d+=1);return k;default:return h?(e=h.connectionId,b=this.getConnection(i,e),b&&b.pc?b.handleMessage(a):e?this._storeMessage(e,a):util.warn("You received an unrecognized message:",a)):void util.warn("You received a malformed message from "+i+" of type "+j)}},a.prototype._storeMessage=function(a,b){this._lostMessages[a]||(this._lostMessages[a]=[]),this._lostMessages[a].push(b)},a.prototype._getMessages=function(a){var b;return b=this._lostMessages[a],b?(delete this._lostMessages[a],b):[]},a.prototype.connect=function(a,b){var c;return this.disconnected?(util.warn("You cannot connect to a new Peer because you called .disconnect() on this Peer and ended your connection with the server. You can create a new Peer to reconnect, or call reconnect on this peer if you believe its ID to still be available."),void this.emitError("disconnected","Cannot connect to new Peer after disconnecting from server.")):(c=new DataConnection(a,this,b),this._addConnection(a,c),c)},a.prototype.call=function(a,b,c){var d;return this.disconnected?(util.warn("You cannot connect to a new Peer because you called .disconnect() on this Peer and ended your connection with the server. You can create a new Peer to reconnect."),void this.emitError("disconnected","Cannot connect to new Peer after disconnecting from server.")):b?(c=c||{},c._stream=b,d=new MediaConnection(a,this,c),this._addConnection(a,d),d):void util.error("To call a peer, you must provide a stream from your browser's `getUserMedia`.")},a.prototype._addConnection=function(a,b){this.connections[a]||(this.connections[a]=[]),this.connections[a].push(b)},a.prototype.getConnection=function(a,b){var c,d,e;if(c=this.connections[a],!c)return null;for(d=0,e=c.length;e>d;){if(c[d].id===b)return c[d];d++}return null},a.prototype._delayedAbort=function(a,b){var c;c=this,util.setZeroTimeout(function(){c._abort(a,b)})},a.prototype._abort=function(a,b){util.error("Aborting!"),this._lastServerId?this.disconnect():this.destroy(),this.emitError(a,b)},a.prototype.emitError=function(a,b){util.error("Error:",b),"string"==typeof b&&(b=new Error(b)),b.type=a,this.emit("error",b)},a.prototype.destroy=function(){this.destroyed||(this._cleanup(),this.disconnect(),this.destroyed=!0)},a.prototype._cleanup=function(){var a,b,c;if(this.connections)for(c=Object.keys(this.connections),a=0,b=c.length;b>a;)this._cleanupPeer(c[a]),a++;this.emit("close")},a.prototype._cleanupPeer=function(a){var b,c,d;for(b=this.connections[a],c=0,d=b.length;d>c;)b[c].close(),c+=1},a.prototype.disconnect=function(){var a;a=this,util.setZeroTimeout(function(){a.disconnected||(a.disconnected=!0,a.open=!1,a.socket&&a.socket.close(),a.emit("disconnected",a.id),a._lastServerId=a.id,a.id=null)})},a.prototype.reconnect=function(){if(this.disconnected&&!this.destroyed)util.log("Attempting reconnection to server with ID "+this._lastServerId),this.disconnected=!1,this._initializeServerConnection(),this._initialize(this._lastServerId);else{if(this.destroyed)throw new Error("This peer cannot reconnect to the server. It has already been destroyed.");if(this.disconnected||this.open)throw new Error("Peer "+this.id+" cannot reconnect because it is not disconnected from the server!");util.error("In a hurry? We're still trying to make the initial connection!")}},a.prototype.listAllPeers=function(a){var b,c,d,e,f;a=a||function(){},e=this,b=new XMLHttpRequest,c=this.options.secure?"https://":"http://",f=c+this.options.host+":"+this.options.port+this.options.path+this.options.key+"/peers",d="?ts="+(new Date).getTime()+Math.random(),f+=d,b.open("get",f,!0),b.onerror=function(){e._abort("server-error","Could not get peers from the server."),a([])},b.onreadystatechange=function(){var c;if(4===b.readyState){if(401===b.status)throw c="",c=e.options.host!==util.CLOUD_HOST?"It looks like you're using the cloud server. You can email team@peerjs.com to enable peer listing for your API key.":"You need to enable `allow_discovery` on your self-hosted PeerServer to use this feature.",new Error("It doesn't look like you have permission to list peers IDs. "+c);a(200!==b.status?[]:JSON.parse(b.responseText))}},b.send(null)},a}),function(a,b){return"function"==typeof define&&define.amd?define([],function(){return a.RTCIceCandidate=b()}):"object"==typeof exports?module.exports=b():a.RTCIceCandidate=b()}(this,function(){return root.RTCIceCandidate||root.mozRTCIceCandidate}),function(a,b){return"function"==typeof define&&define.amd?define([],function(){return a.RTCPeerConnection=b()}):"object"==typeof exports?module.exports=b():a.RTCPeerConnection=b()}(this,function(){return root.RTCPeerConnection||root.mozRTCPeerConnection||root.webkitRTCPeerConnection}),function(a,b){return"function"==typeof define&&define.amd?define([],function(){return a.RTCSessionDescription=b()}):"object"==typeof exports?module.exports=b():a.RTCSessionDescription=b()}(this,function(){return window.RTCSessionDescription||window.mozRTCSessionDescription}),function(a,b){return"function"==typeof define&&define.amd?define([],function(){return a.Socket=b()}):"object"==typeof exports?module.exports=b():a.Socket=b()}(this,function(){var a;return a=function(b,c,d,e,f){var g,h;return this instanceof a?(EventEmitter.call(this),this.disconnected=!1,this._queue=[],g=b?"https://":"http://",h=b?"wss://":"ws://",this._httpUrl=g+c+":"+d+e+f,this._wsUrl=h+c+":"+d+e+"peerjs?key="+f):new a(b,c,d,e,f)},util.inherits(a,EventEmitter),a.prototype.start=function(a,b){return this.id=a,this._httpUrl+="/"+a+"/"+b,this._wsUrl+="&id="+a+"&token="+b,this._startXhrStream(),this._startWebSocket()},a.prototype._startWebSocket=function(){var a;a=this,this._socket||(this._socket=new WebSocket(this._wsUrl),this._socket.onmessage=function(b){var c,d;try{c=JSON.parse(b.data),a.emit("message",c)}catch(e){return d=e,void util.log("Invalid server message",b.data)}},this._socket.onclose=function(){util.log("Socket closed."),a.disconnected=!0,a.emit("disconnected")},this._socket.onopen=function(){a._timeout&&(clearTimeout(a._timeout),setTimeout(function(){a._http.abort(),a._http=null},5e3)),a._sendQueuedMessages(),util.log("Socket open")})},a.prototype._startXhrStream=function(a){var b,c;try{c=this,this._http=new XMLHttpRequest,this._http._index=1,this._http._streamIndex=a||0,this._http.open("post",this._httpUrl+"/id?i="+this._http._streamIndex,!0),this._http.onreadystatechange=function(){2===this.readyState&&this.old?(this.old.abort(),delete this.old):this.readyState>2&&200===this.status&&this.responseText?c._handleStream(this):200!==this.status&&(clearTimeout(c._timeout),c.emit("disconnected"))},this._http.send(null),this._setHTTPTimeout()}catch(d){b=d,util.log("XMLHttpRequest not available; defaulting to WebSockets")}},a.prototype._handleStream=function(a){var b,c,d,e,f;if(f=a.responseText.split("\n"),a._buffer)for(;a._buffer.length>0;){d=a._buffer.shift(),b=f[d];try{b=JSON.parse(b)}catch(g){c=g,a._buffer.shift(d);break}this.emit("message",b)}if(e=f[a._index])if(a._index+=1,a._index===f.length)a._buffer||(a._buffer=[]),a._buffer.push(a._index-1);else{try{e=JSON.parse(e)}catch(g){return c=g,void util.log("Invalid server message",e)}this.emit("message",e)}},a.prototype._setHTTPTimeout=function(){var a;a=this,this._timeout=setTimeout(function(){var b;b=a._http,a._wsOpen()?b.abort():(a._startXhrStream(b._streamIndex+1),a._http.old=b)},25e3)},a.prototype._wsOpen=function(){return this._socket&&1===this._socket.readyState},a.prototype._sendQueuedMessages=function(){var a,b;for(a=0,b=this._queue.length;b>a;)this.send(this._queue[a]),a+=1},a.prototype.send=function(a){var b,c,d;if(!this.disconnected){if(!this.id)return void this._queue.push(a);if(!a.type)return void this.emit("error","Invalid message");c=JSON.stringify(a),this._wsOpen()?this._socket.send(c):(b=new XMLHttpRequest,d=this._httpUrl+"/"+a.type.toLowerCase(),b.open("post",d,!0),b.setRequestHeader("Content-Type","application/json"),b.send(c))}},a.prototype.close=function(){!this.disconnected&&this._wsOpen()&&(this._socket.close(),this.disconnected=!0)},a}),function(a,b){return"function"==typeof define&&define.amd?define([],function(){return a.util=b()}):"object"==typeof exports?module.exports=b():a.util=b()}(this,function(){var a,b,c;return b={iceServers:[{url:"stun:stun.l.google.com:19302"}]},a=1,c={noop:function(){},CLOUD_HOST:"0.peerjs.com",CLOUD_PORT:9e3,chunkedBrowsers:{Chrome:1},chunkedMTU:16300,logLevel:0,setLogLevel:function(a){var b;b=parseInt(a,10),c.logLevel=isNaN(parseInt(a,10))?a?3:0:b,c.log=c.warn=c.error=c.noop,c.logLevel>0&&(c.error=c._printWith("ERROR")),c.logLevel>1&&(c.warn=c._printWith("WARNING")),c.logLevel>2&&(c.log=c._print)},setLogFunction:function(a){a.constructor!==Function?c.warn("The log function you passed in is not a function. Defaulting to regular logs."):c._print=a},_printWith:function(a){return function(){var b;b=Array.prototype.slice.call(arguments_),b.unshift(a),c._print.apply(c,b)}},_print:function(){var a,b,c,d;for(b=!1,a=Array.prototype.slice.call(arguments_),a.unshift("PeerJS: "),c=0,d=a.length;d>c;)a[c]instanceof Error&&(a[c]="("+a[c].name+") "+a[c].message,b=!0),c++;b?console.error.apply(console,a):console.log.apply(console,a)},defaultConfig:b,browser:function(){return window.mozRTCPeerConnection?"Firefox":window.webkitRTCPeerConnection?"Chrome":window.RTCPeerConnection?"Supported":"Unsupported"}(),supports:function(){var a,d,e,f,g,h,i,j,k,l,m,n;if("undefined"==typeof RTCPeerConnection)return{};e=!0,a=!0,d=!1,n=!1,j=!!window.webkitRTCPeerConnection,k=void 0,f=void 0;try{k=new RTCPeerConnection(b,{optional:[{RtpDataChannels:!0}]})}catch(o){g=o,e=!1,a=!1}if(e)try{f=k.createDataChannel("_PEERJSTEST")}catch(o){g=o,e=!1}if(e){try{f.binaryType="blob",d=!0}catch(o){}m=new RTCPeerConnection(b,{});try{l=m.createDataChannel("_PEERJSRELIABLETEST",{}),n=l.reliable}catch(o){}m.close()}return a&&(a=!!k.addStream),!j&&e&&(i=new RTCPeerConnection(b,{optional:[{RtpDataChannels:!0}]}),i.onnegotiationneeded=function(){j=!0,c&&c.supports&&(c.supports.onnegotiationneeded=!0)},h=i.createDataChannel("_PEERJSNEGOTIATIONTEST"),setTimeout(function(){i.close()},1e3)),k&&k.close(),{audioVideo:a,data:e,binaryBlob:d,binary:n,reliable:n,sctp:n,onnegotiationneeded:j}}(),validateId:function(a){return!a||/^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.exec(a)},validateKey:function(a){return!a||/^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.exec(a)},debug:!1,inherits:function(a,b){a.super_=b,a.prototype=Object.create(b.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}})},extend:function(a,b){var c;for(c in b)b.hasOwnProperty(c)&&(a[c]=b[c]);return a},pack:BinaryPack.pack,unpack:BinaryPack.unpack,log:function(){var a,b,d,e;if(c.debug){for(b=!1,a=Array.prototype.slice.call(arguments_),a.unshift("PeerJS: "),d=0,e=a.length;e>d;)a[d]instanceof Error&&(a[d]="("+a[d].name+") "+a[d].message,b=!0),d++;b?console.error.apply(console,a):console.log.apply(console,a)}},setZeroTimeout:this,chunk:function(b){var d,e,f,g,h,i,j,k;for(f=[],i=b.size,j=h=0,k=Math.ceil(i/c.chunkedMTU);i>j;)g=Math.min(i,j+c.chunkedMTU),d=b.slice(j,g),e={__peerData:a,n:h,data:d,total:k},f.push(e),j=g,h+=1;return a+=1,f},blobToArrayBuffer:function(a,b){var c;c=new FileReader,c.onload=function(a){b(a.target.result)},c.readAsArrayBuffer(a)},blobToBinaryString:function(a,b){var c;c=new FileReader,c.onload=function(a){b(a.target.result)},c.readAsBinaryString(a)},binaryStringToArrayBuffer:function(a){var b,c;for(b=new Uint8Array(a.length),c=0;c<a.length;)b[c]=255&a.charCodeAt(c),c++;return b.buffer},randomToken:function(){return Math.random().toString(36).substr(2)},isSecure:function(){return"https:"===location.protocol}}});